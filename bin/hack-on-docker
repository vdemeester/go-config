#!/bin/sh
# Script to "hack" on docker â€” It will :
# - Assume we are on a docker folder and go to the git root
# - Detect if its on a branch
# - Build the image according to the branch and Dockerfile
# - Run a container based on the image with the correct stuff mounted in volumes

# TODO:
# - Support docker options (same as the make|hack.sh commands +shell)
# - Pass the env' variables (TESTFLAGS & co)
# - Add some options (like binary+server start in debug mode)
# - Rewrite it in go ? :P

# fail in case of errors
set -e



cd `git root`

GIT_BRANCH=$(git rev-parse --abbrev-ref HEAD 2>/dev/null)
DOCKER_IMAGE="docker:$GIT_BRANCH"

# The idea is to run goconvey in it (with other things)
# Command is :
# goconvey -depth=2 -host="$(ip -o -4 addr list eth0 | awk '{print $4}' | cut -d/ -f1)"

cat > custom.entrypoint.sh <<EOF
#!/bin/sh
go get github.com/smartystreets/goconvey
goconvey -depth=2 -host="$(ip -o -4 addr list eth0 | awk '{print $4}' | cut -d/ -f1)" > /tmp/goconvey.logs 2>&1 &
exec bash
EOF

cat > custom.Dockerfile <<EOF
FROM $DOCKER_IMAGE
MAINTAINER Vincent Demeester <vincent@sbr.pm>

RUN go get github.com/smartystreets/goconvey
COPY custom.entrypoint.sh /custom.entrypoint.sh
RUN chmod +x /custom.entrypoint.sh

ENTRYPOINT ["/custom.entrypoint.sh"]
EOF

docker build -t $DOCKER_IMAGE .
docker build -f custom.Dockerfile -t "custom${DOCKER_IMAGE}" .


docker run --privileged --rm -ti \
       -v `pwd`:/go/src/github.com/docker/docker \
       -p 8080:8080 \
       "custom${DOCKER_IMAGE}"
