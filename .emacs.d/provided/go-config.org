* Go configuration üêπ

   Let's install go-mode and configure it.


   #+BEGIN_SRC emacs-lisp
     (exec-path-from-shell-copy-env "GOPATH")
     (exec-path-from-shell-copy-env "GO15VENDOREXPERIMENT")
     (use-package go-mode
       :ensure t
       :bind (("C-c C-g a" . go-test-current-project)
              ("C-c m" . go-test-current-file)
              ("C-c ." . go-test-current-test)
              ("C-c b" . go-run)
              ("C-h f" . godoc-at-point)
              ("C-c C-r" . go-remove-unused-imports)
              ("C-c C-i" . go-goto-imports)))
   #+END_SRC

   And install stuffs, like autocomplete, documentation, errorcheck, tests.

   #+BEGIN_SRC emacs-lisp
     (use-package company-go
       :ensure t
       :config (add-to-list 'company-backends 'company-go))
     (use-package go-eldoc
       :ensure t
       :config (add-hook 'go-mode-hook 'go-eldoc-setup))
     (use-package go-errcheck
       :ensure t)
     (use-package gotest
       :ensure t)
     (use-package golint
       :ensure t)
   #+END_SRC

   Setup the go-mode hook to activate =gofmt= on save, oracle-mode and
   co.

   #+BEGIN_SRC emacs-lisp
     (defun my-go-mode-hook ()
       ;; (setq gofmt-command "gofmt -s -w")
       (add-hook 'before-save-hook 'gofmt-before-save)
       (if (not (string-match "go" compile-command))
           (set (make-local-variable 'compile-command)
                "go build -v && go test -v && go vet")))
     (add-hook 'go-mode-hook 'my-go-mode-hook)
   #+END_SRC

