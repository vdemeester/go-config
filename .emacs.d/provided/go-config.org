* Go configuration üêπ

   Let's install go-mode and configure it.


   #+BEGIN_SRC emacs-lisp
     (exec-path-from-shell-copy-env "GOPATH")
     (exec-path-from-shell-copy-env "GO15VENDOREXPERIMENT")
     (use-package go-mode
       :ensure t
       :config
       (bind-key "C-h f" 'godoc-at-point go-mode-map)
       (bind-key "C-c C-r" 'go-remove-unused-imports go-mode-map)
       (bind-key "C-c C-i" 'go-godoc-history go-mode-map))
   #+END_SRC

   And install stuffs, like autocomplete, documentation, errorcheck, tests.

   #+BEGIN_SRC emacs-lisp
     (use-package company-go
       :ensure t
       :config (add-to-list 'company-backends 'company-go))
     (use-package go-eldoc
       :ensure t
       :config (add-hook 'go-mode-hook 'go-eldoc-setup))
     (use-package go-errcheck
       :ensure t)
     (use-package gotest
       :ensure t
       :init
       (bind-key "C-c r" 'go-run go-mode-map)
       (bind-key "C-c t C-g a" 'go-test-current-project go-mode-map)
       (bind-key "C-c t m" 'go-test-current-file go-mode-map)
       (bind-key "C-c t ." 'go-test-current-test go-mode-map)
       (bind-key "C-c t c" 'go-test-current-coverage go-mode-map)
       (bind-key "C-c t b" 'go-test-current-benchmark go-mode-map)
       (bind-key "C-c t C-g b" 'go-test-current-project-benchmarks go-mode-map))
     (use-package golint
       :ensure t)
     (use-package flycheck-gometalinter
       :ensure t
       :config
       (progn
         (flycheck-gometalinter-setup)))
#+END_SRC

   Setup the go-mode hook to activate =gofmt= on save, oracle-mode and
   co.

   #+BEGIN_SRC emacs-lisp
     (defun my-go-mode-hook ()
       (load-file "$GOPATH/src/golang.org/x/tools/cmd/oracle/oracle.el")
       (add-hook 'go-mode-hook 'go-oracle-mode)
       (setq gofmt-command "gofmts")
       (add-hook 'before-save-hook 'gofmt-before-save)
       (if (not (string-match "go" compile-command))
           (set (make-local-variable 'compile-command)
                "go build -v && go test -v && go vet")))
     (add-hook 'go-mode-hook 'my-go-mode-hook)
   #+END_SRC

